{"version":3,"sources":["components/Simulation/data.js","components/Simulation/index.jsx","components/Form/index.js","utils/generator.js","utils/demand.js","utils/events.js","hooks/useSimulation.js","components/Result/index.jsx","components/Chart/data.js","components/Chart/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["header","initialState","unitPrice","unitCost","penaltyAmount","dailyStock","simulationDays","useStyles","makeStyles","table","maxHeight","Simulation","rows","title","pagination","reset","React","useState","page","setPage","rowsPerPage","setRowsPerPage","classes","useEffect","Paper","TableContainer","className","Table","stickyHeader","size","TableHead","Typography","variant","id","align","TableRow","map","c","index","TableCell","TableBody","slice","row","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","value","validationSchema","yup","typeError","positive","required","integer","Form","handleSubmit","formik","useFormik","initialValues","onSubmit","values","Box","mx","TextField","label","name","onChange","handleChange","error","touched","Boolean","errors","helperText","inputProps","maxLength","fullWidth","mt","display","justifyContent","Button","type","Generator","this","m","a","_last","Date","now","Math","random","uniform","b","r","temp","getNext","Number","toFixed","num","fixed","re","RegExp","toString","match","demands","cumulativeFrequencies","getDemand","demand","forEach","freq","getDailyWaste","getDailySalesLost","getDailyUtility","isCaught","getDailyUtilityWithPermission","hasPermission","permissionCost","useSimulation","setRows","results","setResults","last","pop","simulate","dslAvg","dwAvg","duAvg","dupAvg","initPrice","initCost","initPenalty","initStock","randDemand","dailyWaste","dailySalesLost","dailyWasteAcumulator","dailySalesLostAcumulator","randPoliceOcurrance","randPolice","dailyUtility","dailyUtilityAcumulator","dailyUtilityWithPermission","dailyUtilityWithPermissionAcumulator","i","push","getSimulation","Result","Card","CardContent","data","labels","datasets","borderColor","Chart","App","setReset","Grid","container","alignContent","item","xs","lg","my","spacing","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.517baffb.chunk.js","sourcesContent":["export const header = [\n    \"Dia\",\n    \"RND Demanda\",\n    \"Demanda\",\n    \"Stock\",\n    \"Desperdicio\",\n    \"Perdidas\",\n    \"AVG Desperdicio\",\n    \"AVG Perdidas\",\n    \"RDN Oc. Policia\",\n    \"RND Atrapado\",\n    \"Es Atrapado\",\n    \"Utilidad\",\n    \"AVG Utilidad\",\n    \"Utilidad c/Permiso\",\n    \"AVG Utilidad c/Permiso\"\n];\n\nexport const initialState = {\n    unitPrice: 30,\n    unitCost: 10,\n    penaltyAmount: 300,\n    dailyStock: 50,\n    simulationDays: 100\n};","import React, {useEffect} from 'react';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {header} from \"./data\";\nimport {Paper, TableContainer, TablePagination, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    table: {\n        maxHeight: 600\n    }\n});\n\n\nconst Simulation = ({rows, title, pagination, reset}) => {\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        reset && setPage(0);\n    }, [reset]);\n\n    return (\n        <Paper>\n            <TableContainer className={classes.table}>\n                <Table\n                    stickyHeader\n                    size={\"small\"}\n                >\n                    <TableHead>\n                        {\n                            title &&\n                            <Typography variant=\"h6\" id=\"tableTitle\" align={\"right\"}>\n                                {title}\n                            </Typography>\n                        }\n                        <TableRow>\n                            {header.map((c, index) =>\n                                <TableCell key={index}>\n                                    {c}\n                                </TableCell>)}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                            <TableRow key={index}>\n                                {row.map((c, index) => (\n                                    <TableCell\n                                        key={index}\n                                        align=\"right\"\n                                    >\n                                        {c}\n                                    </TableCell>))}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {\n                pagination &&\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            }\n        </Paper>\n    );\n};\n\nexport default Simulation;","import React from 'react';\nimport {Box, Button, TextField} from \"@material-ui/core\";\nimport {useFormik} from \"formik\";\nimport * as yup from 'yup';\nimport {initialState} from \"../Simulation/data\";\n\nconst validationSchema = yup.object({\n    unitPrice: yup\n        .number('Ingrese un numero')\n        .typeError('Debe ingresar un numero')\n        .positive('Ingrese un numero positivo')\n        .required('Ingrese un numero'),\n    unitCost: yup\n        .number('Ingrese un numero')\n        .typeError('Debe ingresar un numero')\n        .positive('Ingrese un numero positivo')\n        .required('Ingrese un numero'),\n    penaltyAmount: yup\n        .number('Ingrese un numero')\n        .typeError('Debe ingresar un numero')\n        .positive('Ingrese un numero positivo')\n        .required('Ingrese un numero'),\n    dailyStock: yup\n        .number('Ingrese un numero')\n        .typeError('Debe ingresar un numero')\n        .positive('Ingrese un numero positivo')\n        .integer('Ingrese un numero entero')\n        .required('Ingrese un numero'),\n    simulationDays: yup\n        .number('Ingrese un numero')\n        .typeError('Debe ingresar un numero')\n        .positive('Ingrese un numero positivo')\n        .integer('Ingrese un numero entero')\n        .required('Ingrese un numero')\n})\n\nconst Form = ({handleSubmit}) => {\n    const formik = useFormik({\n        initialValues: initialState,\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            handleSubmit({...values});\n        },\n    });\n    return (\n        <Box mx={2}>\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    label=\"Precio unitario\"\n                    id=\"unitPrice\"\n                    name=\"unitPrice\"\n                    value={formik.values.unitPrice || ''}\n                    onChange={formik.handleChange}\n                    error={formik.touched.unitPrice && Boolean(formik.errors.unitPrice)}\n                    helperText={formik.touched.unitPrice && formik.errors.unitPrice}\n                    inputProps={\n                        {\n                            maxLength: 5\n                        }\n                    }\n                    fullWidth\n                />\n                <TextField\n                    label=\"Costo unitario\"\n                    id=\"unitCost\"\n                    name=\"unitCost\"\n                    value={formik.values.unitCost || ''}\n                    onChange={formik.handleChange}\n                    error={formik.touched.unitCost && Boolean(formik.errors.unitCost)}\n                    helperText={formik.touched.unitCost && formik.errors.unitCost}\n                    inputProps={\n                        {\n                            maxLength: 5\n                        }\n                    }\n                    fullWidth\n                />\n                <TextField\n                    label=\"Valor de multa\"\n                    id=\"penaltyAmount\"\n                    name=\"penaltyAmount\"\n                    value={formik.values.penaltyAmount || ''}\n                    onChange={formik.handleChange}\n                    error={formik.touched.penaltyAmount && Boolean(formik.errors.penaltyAmount)}\n                    helperText={formik.touched.penaltyAmount && formik.errors.penaltyAmount}\n                    inputProps={\n                        {\n                            maxLength: 5\n                        }\n                    }\n                    fullWidth\n                />\n                <TextField\n                    label=\"Stock diario\"\n                    id=\"dailyStock\"\n                    name=\"dailyStock\"\n                    value={formik.values.dailyStock || ''}\n                    onChange={formik.handleChange}\n                    error={formik.touched.dailyStock && Boolean(formik.errors.dailyStock)}\n                    helperText={formik.touched.dailyStock && formik.errors.dailyStock}\n                    inputProps={\n                        {\n                            maxLength: 5\n                        }\n                    }\n                    fullWidth\n                />\n                <TextField\n                    label=\"Cantidad de dias a simular\"\n                    id=\"simulationDays\"\n                    name=\"simulationDays\"\n                    value={formik.values.simulationDays || ''}\n                    onChange={formik.handleChange}\n                    error={formik.touched.simulationDays && Boolean(formik.errors.simulationDays)}\n                    helperText={formik.touched.simulationDays && formik.errors.simulationDays}\n                    inputProps={\n                        {\n                            maxLength: 5\n                        }\n                    }\n                    fullWidth\n                />\n                <Box mt={2} display={\"flex\"} justifyContent={\"flex-end\"}>\n                    <Button\n                        type={\"submit\"}\n                        variant={\"outlined\"}>\n                        SIMULAR\n                    </Button>\n                </Box>\n            </form>\n        </Box>\n    );\n};\n\nexport default Form;","class Generator {\n    constructor() {\n        this.m = 4294967296;\n        this.a = 1664525;\n        this.c = 1013904223;\n        this._last = Date.now();\n    }\n\n    getNext() {\n        // this._last = (this.a * this._last + this.c) % this.m;\n        // return Number(toFixed(this._last / this.m, 4));\n        return Math.random();\n    }\n}\n\nexport function uniform(a, b) {\n    let generator = new Generator();\n    let r;\n    let temp;\n\n    temp = (generator.getNext() * (b - a));\n    r = (Number(a) + temp);\n    return Number(toFixed(r, 4));\n}\n\nexport function toFixed(num, fixed) {\n    let re = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + (fixed || -1) + \"})?\");\n    return num.toString().match(re) ? num.toString().match(re)[0] : num.toString();\n}","const demands = [10, 20, 25, 30, 50, 70, 100];\nconst cumulativeFrequencies = [0.1, 0.3, 0.7, 0.8, 0.9, 0.95, 1];\n\nexport function getDemand(random) {\n    let demand;\n\n    cumulativeFrequencies.forEach((freq, index) => {\n        if (!demand && random < freq) {\n            demand = demands[index]\n        }\n    });\n\n    return demand;\n}","import {toFixed, uniform} from \"./generator\";\nimport {getDemand} from \"./demand\";\n\nfunction getDailyWaste(dailyStock, demand) {\n    return dailyStock > demand ? dailyStock - demand : 0;\n}\n\nfunction getDailySalesLost(dailyStock, demand) {\n    return dailyStock < demand ? demand - dailyStock : 0;\n}\n\nfunction getDailyUtility(demand, unitPrice, dailyStock, unitCost, isCaught, penaltyAmount) {\n    let dailySales = demand < dailyStock ? demand : dailyStock;\n    return (dailySales * unitPrice) - (dailyStock * unitCost) - (isCaught ? penaltyAmount : 0);\n}\n\nfunction getDailyUtilityWithPermission(demand, unitPrice, dailyStock, unitCost, hasPermission, permissionCost) {\n    let dailySales = demand < dailyStock ? demand : dailyStock;\n    return (dailySales * unitPrice) - (dailyStock * unitCost) - (hasPermission ? 0 : permissionCost);\n}\n\nexport function getSimulation({initPrice, initCost, initPenalty, initStock, simulationDays}) {\n    let dslAvg;\n    let dwAvg;\n    let duAvg;\n    let dupAvg;\n\n    let unitCost = Number(initCost);\n    let unitPrice = Number(initPrice);\n    let penaltyAmount = Number(initPenalty);\n    let permissionCost = 200;\n    let dailyStock = Number(initStock);\n\n    let randDemand = uniform(0, 1);\n    let demand = getDemand(randDemand);\n\n    let dailyWaste = getDailyWaste(dailyStock, demand);\n    let dailySalesLost = getDailySalesLost(dailyStock, demand);\n    let dailyWasteAcumulator = dailyWaste;\n    let dailySalesLostAcumulator = dailySalesLost;\n\n\n    let randPoliceOcurrance = uniform(0.2, 0.4)\n    let randPolice = uniform(0, 1)\n    let isCaught = randPolice < randPoliceOcurrance;\n    let hasPermission = true;\n\n    let dailyUtility = getDailyUtility(demand, unitPrice, dailyStock, unitCost, isCaught, penaltyAmount);\n    let dailyUtilityAcumulator = dailyUtility;\n\n    let dailyUtilityWithPermission = getDailyUtilityWithPermission(demand, unitPrice, dailyStock, unitCost, hasPermission, permissionCost);\n    let dailyUtilityWithPermissionAcumulator = dailyUtilityWithPermission;\n\n    let rows = [[1, randDemand, demand, dailyStock, dailyWaste, dailySalesLost, dailyWasteAcumulator, dailySalesLostAcumulator,\n        randPoliceOcurrance, randPolice, isCaught ? 'SI' : 'NO', dailyUtility, dailyUtilityAcumulator, dailyUtilityWithPermission, dailyUtilityWithPermissionAcumulator]]\n\n    for (let i = 2; i <= simulationDays; i++) {\n\n        randDemand = uniform(0, 1);\n        demand = getDemand(randDemand);\n\n        dailyWaste = getDailyWaste(dailyStock, demand);\n        dailySalesLost = getDailySalesLost(dailyStock, demand);\n        dailyWasteAcumulator += dailyWaste;\n        dailySalesLostAcumulator += dailySalesLost;\n\n        randPoliceOcurrance = uniform(0.2, 0.4)\n        randPolice = uniform(0, 1)\n        isCaught = randPolice < randPoliceOcurrance;\n        hasPermission = i % 7 !== 0;\n\n        dailyUtility = getDailyUtility(demand, unitPrice, dailyStock, unitCost, isCaught, penaltyAmount);\n        dailyUtilityAcumulator += dailyUtility\n\n        dailyUtilityWithPermission = getDailyUtilityWithPermission(demand, unitPrice, dailyStock, unitCost, hasPermission, permissionCost);\n        dailyUtilityWithPermissionAcumulator += dailyUtilityWithPermission;\n\n        dwAvg = Number(toFixed(dailyWasteAcumulator / i, 4))\n        dslAvg = Number(toFixed(dailySalesLostAcumulator / i, 4))\n        duAvg = Number(toFixed(dailyUtilityAcumulator / i, 4))\n        dupAvg = Number(toFixed(dailyUtilityWithPermissionAcumulator / i, 4))\n\n        rows.push([i, randDemand, demand, dailyStock, dailyWaste, dailySalesLost, dwAvg, dslAvg,\n            randPoliceOcurrance, randPolice, isCaught ? 'SI' : 'NO', dailyUtility, duAvg, dailyUtilityWithPermission, dupAvg])\n    }\n    return rows;\n}","import {useEffect, useState} from 'react';\nimport {getSimulation} from \"../utils/events\";\n\nconst useSimulation = () => {\n    const [rows, setRows] = useState([]);\n    const [results, setResults] = useState([]);\n\n    const simulate = ({unitPrice, unitCost, penaltyAmount, dailyStock, simulationDays}) => {\n        setRows(getSimulation({\n            initPrice: unitPrice,\n            initCost: unitCost,\n            initPenalty: penaltyAmount,\n            initStock: dailyStock,\n            simulationDays\n        }));\n    }\n\n    useEffect(() => {\n        if (rows.length > 0) {\n            const last = rows.slice(-1).pop();\n            setResults([\n                {\n                    name: 'AVG. VENTAS PERDIDAS',\n                    value: last[7]\n                },\n                {\n                    name: 'AVG. TORTAS TIRADAS',\n                    value: last[6]\n                },\n                {\n                    name: 'AVG. UTILIDAD',\n                    value: last[12]\n                },\n                {\n                    name: 'AVG. UTILIDAD PERMISO',\n                    value: last[14]\n                }\n            ])\n        }\n    }, [rows])\n    return {\n        rows,\n        results,\n        simulate\n    }\n};\n\nexport default useSimulation;","import React from 'react';\nimport {Card, CardContent, Typography} from \"@material-ui/core\";\n\nconst Result = ({name, value}) => {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant={\"subtitle1\"} component={\"h5\"} align={\"center\"}>\n                    {name}\n                </Typography>\n                <Typography variant={\"subtitle2\"} align={\"center\"}>\n                    {value}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Result;","export const data = ({rows}) => ({\n    labels: rows.map(r => r[0]),\n    datasets: [\n        {\n            label: 'Ventas perdidas',\n            data: rows.map(r => r[5]),\n            borderColor: '#457b9d',\n        },\n        {\n            label: 'Tortas tiradas',\n            data: rows.map(r => r[4]),\n            borderColor: '#a8dadc',\n        },\n        {\n            label: 'Utilidad',\n            data: rows.map(r => r[11]),\n            borderColor: '#e63946',\n        },\n        {\n            label: 'Utilidad c/permiso',\n            data: rows.map(r => r[14]),\n            borderColor: '#1d3557',\n        }\n    ],\n});","import React from 'react';\nimport {data} from \"./data\";\nimport {Line} from \"react-chartjs-2\";\n\nconst Chart = ({rows}) => {\n\n    return (\n        <Line\n            data={data({rows})}\n        />\n    );\n}\n\nexport default Chart;","import React, {useEffect, useState} from 'react';\nimport Simulation from \"./components/Simulation\";\nimport {Box, Grid} from \"@material-ui/core\";\nimport Form from \"./components/Form\";\nimport useSimulation from \"./hooks/useSimulation\";\nimport Results from \"./components/Result\";\nimport Chart from \"./components/Chart\";\n\nexport default function App() {\n    const {rows, results, simulate} = useSimulation();\n    const [reset, setReset] = useState(false);\n\n    const handleClickSimulate = (data) => {\n        setReset(true);\n        simulate(data);\n    };\n\n    useEffect(() => {\n        reset && setReset(false);\n    }, [reset])\n\n    return (\n        <>\n            <Grid\n                container\n                alignContent={\"space-around\"}>\n                <Grid item xs={12} lg={2}>\n                    <Box my={2}>\n                        <Form\n                            handleSubmit={handleClickSimulate}\n                        />\n                    </Box>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    xs={12}\n                    lg={4}\n                    spacing={1}\n                    alignItems={\"center\"}\n                >\n                    {results.map((r, index) => (\n                        <Grid\n                            item\n                            key={index}\n                            xs={6}\n                        >\n                            <Results\n                                name={r.name}\n                                value={r.value}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n                <Grid\n                    item\n                    container\n                    xs={12}\n                    lg={6}\n                    alignItems={\"center\"}\n                >\n                    {rows.length > 25 && <Chart rows={rows.slice(-25)}/>}\n                </Grid>\n            </Grid>\n            <Grid container>\n                <Grid item xs={12}>\n                    <Box my={3} mx={\"auto\"}>\n                        <Simulation\n                            title={\"Ultima fila\"}\n                            rows={rows.slice(-1)}\n                        />\n                    </Box> <Box my={3} mx={\"auto\"}>\n                    <Simulation\n                        rows={rows}\n                        reset={reset}\n                        pagination\n                    />\n                </Box>\n                </Grid>\n            </Grid>\n        </>\n\n    );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}